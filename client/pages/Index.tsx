import { useState, useEffect, useRef } from "react";
import { motion, AnimatePresence } from "framer-motion";
import * as flubber from "flubber";
import { Howl } from "howler";

const clickDown = new Howl({
  src: ["switch6.ogg"],
});
const clickUp = new Howl({
  src: ["switch5.ogg"],
});

type TimerMode = "focus" | "shortBreak" | "longBreak";
type TimerEvent = [number, "start" | "stop"]; // [timestamp, action]

interface TimerSession {
  mode: TimerMode;
  events: TimerEvent[];
  sessionStartTime: number;
  originalDuration: number;
}

interface TimerState {
  timeLeft: number;
  isRunning: boolean;
  mode: TimerMode;
  originalTime: number;
}

const MODE_DURATIONS = {
  focus: 30 * 60, // 25 minutes
  shortBreak: 5 * 60, // 5 minutes
  longBreak: 15 * 60, // 15 minutes
};

const MODE_LABELS = {
  focus: "Focus",
  shortBreak: "Short Break",
  longBreak: "Long Break",
};

// SVG path data for play and pause icons
const PLAY_PATH = "M8 5V19L19 12L8 5Z";
const PAUSE_PATH = "M6 4H10V20H6V4ZM14 4H18V20H14V4Z";

export default function Index() {
  // Initialize session from localStorage or create new one
  const initializeSession = (): TimerSession => {
    if (typeof window !== "undefined") {
      const saved = localStorage.getItem("monkeyfocus-session");
      if (saved) {
        try {
          const session: TimerSession = JSON.parse(saved);
          return session;
        } catch {
          // Fall back to default if parsing fails
        }
      }
    }

    // Create new session
    const now = Date.now();
    return {
      mode: "focus",
      events: [],
      sessionStartTime: now,
      originalDuration: MODE_DURATIONS.focus,
    };
  };

  const [session, setSession] = useState<TimerSession>(initializeSession);

  // Calculate current timer state from session
  const calculateTimerState = (currentSession: TimerSession): TimerState => {
    const now = Date.now();
    let totalElapsed = 0;
    let isCurrentlyRunning = false;
    let lastEventTime = currentSession.sessionStartTime;

    // Process all events to calculate total elapsed time
    for (const [timestamp, action] of currentSession.events) {
      if (action === "start") {
        isCurrentlyRunning = true;
        lastEventTime = timestamp;
      } else if (action === "stop") {
        if (isCurrentlyRunning) {
          totalElapsed += timestamp - lastEventTime;
          isCurrentlyRunning = false;
        }
      }
    }

    // If currently running, add time since last start
    if (isCurrentlyRunning) {
      totalElapsed += now - lastEventTime;
    }

    // Convert to seconds and calculate time left
    totalElapsed = Math.floor(totalElapsed / 1000);
    const timeLeft = Math.max(
      0,
      currentSession.originalDuration - totalElapsed,
    );

    // Auto-stop if time is up
    if (timeLeft === 0 && isCurrentlyRunning) {
      isCurrentlyRunning = false;
    }

    return {
      timeLeft,
      isRunning: isCurrentlyRunning,
      mode: currentSession.mode,
      originalTime: currentSession.originalDuration,
    };
  };

  const [timer, setTimer] = useState<TimerState>(() =>
    calculateTimerState(session),
  );
  const [previousTime, setPreviousTime] = useState(timer.timeLeft);
  const intervalRef = useRef<NodeJS.Timeout>();
  const pathRef = useRef<SVGPathElement>(null);
  const morphingRef = useRef<boolean>(false);

  // Save session to localStorage whenever it changes
  useEffect(() => {
    if (typeof window !== "undefined") {
      localStorage.setItem("monkeyfocus-session", JSON.stringify(session));
    }
  }, [session]);

  // Timer countdown effect - recalculate from session every second
  useEffect(() => {
    if (timer.isRunning && timer.timeLeft > 0) {
      intervalRef.current = setInterval(() => {
        const newTimerState = calculateTimerState(session);
        setPreviousTime(timer.timeLeft);
        setTimer(newTimerState);

        // If timer finished, add stop event
        if (newTimerState.timeLeft <= 0 && newTimerState.isRunning) {
          setSession((prev) => ({
            ...prev,
            events: [...prev.events, [Date.now(), "stop"]],
          }));
        }
      }, 1000);
    } else {
      if (intervalRef.current) {
        clearInterval(intervalRef.current);
      }
    }

    return () => {
      if (intervalRef.current) {
        clearInterval(intervalRef.current);
      }
    };
  }, [timer.isRunning, timer.timeLeft, session]);

  // Sound effects using Web Audio API
  const playClockClickSound = () => {
    if (typeof window === "undefined") return;
    if (timer.isRunning) {
      clickDown.play();
    } else {
      clickUp.play();
    }
  };
  const playClockClickUpSound = () => {
    if (typeof window === "undefined") return;
    if (!timer.isRunning) {
      clickDown.play();
    } else {
      clickUp.play();
    }
  };

  const playSoftWindSound = () => {
    if (typeof window === "undefined") return;

    try {
      const audioContext = new (window.AudioContext ||
        (window as any).webkitAudioContext)();
      const bufferSize = audioContext.sampleRate * 0.8; // 0.8 second
      const buffer = audioContext.createBuffer(
        1,
        bufferSize,
        audioContext.sampleRate,
      );
      const data = buffer.getChannelData(0);

      // Generate smooth pink noise for soft wind sound
      let pinkNoise = 0;
      for (let i = 0; i < bufferSize; i++) {
        const white = Math.random() * 2 - 1;
        pinkNoise = 0.99765 * pinkNoise + white * 0.099046;
        // Apply envelope for smooth wind-like texture
        const envelope = Math.sin((i / bufferSize) * Math.PI);
        data[i] = pinkNoise * 0.08 * envelope;
      }

      const source = audioContext.createBufferSource();
      const gainNode = audioContext.createGain();
      const filter = audioContext.createBiquadFilter();

      source.buffer = buffer;
      filter.type = "lowpass";
      filter.frequency.setValueAtTime(600, audioContext.currentTime);
      filter.Q.setValueAtTime(0.5, audioContext.currentTime);

      source.connect(filter);
      filter.connect(gainNode);
      gainNode.connect(audioContext.destination);

      // Soft fade in and out
      gainNode.gain.setValueAtTime(0, audioContext.currentTime);
      gainNode.gain.linearRampToValueAtTime(
        0.3,
        audioContext.currentTime + 0.2,
      );
      gainNode.gain.linearRampToValueAtTime(
        0.3,
        audioContext.currentTime + 0.4,
      );
      gainNode.gain.exponentialRampToValueAtTime(
        0.001,
        audioContext.currentTime + 0.8,
      );

      source.start();
    } catch (error) {
      console.log("Audio not supported");
    }
  };

  // Morph between play and pause icons
  const morphPlayPause = (isPlaying: boolean) => {
    if (!pathRef.current || morphingRef.current) return;

    morphingRef.current = true;
    const currentPath = pathRef.current.getAttribute("d") || PLAY_PATH;
    const targetPath = isPlaying ? PAUSE_PATH : PLAY_PATH;

    try {
      const interpolator = flubber.interpolate(currentPath, targetPath);

      let progress = 0;
      const duration = 200;
      const step = 16;

      const animate = () => {
        progress += step / duration;
        if (progress >= 1) {
          pathRef.current!.setAttribute("d", targetPath);
          morphingRef.current = false;
          return;
        }

        pathRef.current!.setAttribute("d", interpolator(progress));
        requestAnimationFrame(animate);
      };

      requestAnimationFrame(animate);
    } catch (error) {
      pathRef.current.setAttribute("d", targetPath);
      morphingRef.current = false;
    }
  };

  const toggleTimer = () => {
    const now = Date.now();
    const newIsRunning = !timer.isRunning;

    // Add start/stop event to session
    setSession((prev) => ({
      ...prev,
      events: [...prev.events, [now, newIsRunning ? "start" : "stop"]],
    }));

    // Update timer state immediately
    setTimer((prev) => ({
      ...prev,
      isRunning: newIsRunning,
    }));

    morphPlayPause(newIsRunning);
  };

  const switchMode = (newMode: TimerMode) => {
    if (newMode === timer.mode) return;

    playSoftWindSound();

    const now = Date.now();
    const newDuration = MODE_DURATIONS[newMode];

    // Create new session for the new mode
    const newSession: TimerSession = {
      mode: newMode,
      events: [],
      sessionStartTime: now,
      originalDuration: newDuration,
    };

    setSession(newSession);

    // Update timer state
    setTimer({
      mode: newMode,
      timeLeft: newDuration,
      originalTime: newDuration,
      isRunning: false,
    });
    setPreviousTime(newDuration);

    // Reset to play icon when switching modes
    if (pathRef.current) {
      pathRef.current.setAttribute("d", PLAY_PATH);
    }
  };

  const formatTime = (
    seconds: number,
  ): { minutes: string; seconds: string } => {
    const mins = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return {
      minutes: mins.toString().padStart(2, "0"),
      seconds: secs.toString().padStart(2, "0"),
    };
  };

  const { minutes, seconds } = formatTime(timer.timeLeft);
  const { minutes: prevMinutes, seconds: prevSeconds } =
    formatTime(previousTime);

  // Determine animation direction for digits
  const getDigitDirection = (
    current: string,
    previous: string,
    position: number,
  ) => {
    const currentNum = parseInt(current[position]);
    const previousNum = parseInt(previous[position]);

    if (currentNum > previousNum) return 1; // slide up
    if (currentNum < previousNum) return -1; // slide down
    return 0; // no change
  };

  const AnimatedDigit = ({
    digit,
    direction,
    index,
  }: {
    digit: string;
    direction: number;
    index: number;
  }) => {
    return (
      <div className="relative inline-block w-[0.7em] overflow-hidden">
        <AnimatePresence mode="wait">
          <motion.span key={`${digit}`} className="block text-center">
            {digit}
          </motion.span>
        </AnimatePresence>
      </div>
    );
  };

  const getModeIcon = (mode: TimerMode) => {
    switch (mode) {
      case "focus":
        return (
          <svg className="w-6 h-6" viewBox="0 0 24 24" fill="none">
            <path
              d="M10 20L14 4M18 8L22 12L18 16M6 16L2 12L6 8"
              stroke="currentColor"
              strokeWidth="2"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
          </svg>
        );
      case "shortBreak":
        return (
          <svg className="w-6 h-6" viewBox="0 0 24 24" fill="none">
            <path
              d="M7 11.5V14M7 11.5V5.49997C7 5.10214 7.15804 4.72061 7.43934 4.43931C7.72064 4.158 8.10218 3.99997 8.5 3.99997C8.89782 3.99997 9.27936 4.158 9.56066 4.43931C9.84196 4.72061 10 5.10214 10 5.49997M7 11.5C7 11.1021 6.84196 10.7206 6.56066 10.4393C6.27936 10.158 5.89782 9.99997 5.5 9.99997C5.10218 9.99997 4.72064 10.158 4.43934 10.4393C4.15804 10.7206 4 11.1021 4 11.5V13.5C4 15.4891 4.79018 17.3967 6.1967 18.8033C7.60322 20.2098 9.51088 21 11.5 21C13.4891 21 15.3968 20.2098 16.8033 18.8033C18.2098 17.3967 19 15.4891 19 13.5V8.49997C19 8.10214 18.842 7.72061 18.5607 7.43931C18.2794 7.158 17.8978 6.99997 17.5 6.99997C17.1022 6.99997 16.7206 7.158 16.4393 7.43931C16.158 7.72061 16 8.10214 16 8.49997M10 5.49997V11M10 5.49997V4.49997C10 4.10214 10.158 3.72061 10.4393 3.43931C10.7206 3.158 11.1022 2.99997 11.5 2.99997C11.8978 2.99997 12.2794 3.158 12.5607 3.43931C12.842 3.72061 13 4.10214 13 4.49997V5.49997M16 8.49997V5.49997C16 5.10214 15.842 4.72061 15.5607 4.43931C15.2794 4.158 14.8978 3.99997 14.5 3.99997C14.1022 3.99997 13.7206 4.158 13.4393 4.43931C13.158 4.72061 13 5.10214 13 5.49997M16 8.49997V11M13 5.49997V11"
              stroke="currentColor"
              strokeWidth="2"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
          </svg>
        );
      case "longBreak":
        return (
          <svg className="w-6 h-6" viewBox="0 0 24 24" fill="none">
            <path
              d="M13 10V3L4 14H11V21L20 10H13Z"
              stroke="currentColor"
              strokeWidth="2"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
          </svg>
        );
    }
  };

  return (
    <div className="min-h-screen bg-cream flex flex-col">
      {/* Branding Header */}
      <div className="absolute top-4 left-4 z-10">
        <svg
          width="100"
          height="36"
          viewBox="0 0 100 36"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M4 8.75H4.75V9.5H4V8.75ZM4 8H4.75V8.75H4V8ZM4.75 8H5.5V8.75H4.75V8ZM4.75 8.75H5.5V9.5H4.75V8.75ZM4.75 9.5H5.5V10.25H4.75V9.5ZM4.75 10.25H5.5V11H4.75V10.25ZM4.75 11H5.5V11.75H4.75V11ZM4 11H4.75V11.75H4V11ZM4 10.25H4.75V11H4V10.25ZM4 9.5H4.75V10.25H4V9.5ZM4 11.75H4.75V12.5H4V11.75ZM4.75 11.75H5.5V12.5H4.75V11.75ZM4.75 12.5H5.5V13.25H4.75V12.5ZM4.75 13.25H5.5V14H4.75V13.25ZM4 13.25H4.75V14H4V13.25ZM4 12.5H4.75V13.25H4V12.5ZM7 13.25H7.75V14H7V13.25ZM7.75 13.25H8.5V14H7.75V13.25ZM7.75 12.5H8.5V13.25H7.75V12.5ZM7.75 11.75H8.5V12.5H7.75V11.75ZM7.75 11H8.5V11.75H7.75V11ZM7.75 10.25H8.5V11H7.75V10.25ZM7.75 9.5H8.5V10.25H7.75V9.5ZM7.75 8.75H8.5V9.5H7.75V8.75ZM7 10.25H7.75V11H7V10.25ZM7 11H7.75V11.75H7V11ZM7 11.75H7.75V12.5H7V11.75ZM7 12.5H7.75V13.25H7V12.5ZM7 9.5H7.75V10.25H7V9.5ZM5.5 8.75H6.25V9.5H5.5V8.75ZM6.25 8.75H7V9.5H6.25V8.75ZM7 8H7.75V8.75H7V8ZM7 8.75H7.75V9.5H7V8.75ZM6.25 8H7V8.75H6.25V8ZM10 13.25H10.75V14H10V13.25ZM10.75 13.25H11.5V14H10.75V13.25ZM10.75 12.5H11.5V13.25H10.75V12.5ZM10.75 11.75H11.5V12.5H10.75V11.75ZM10.75 11H11.5V11.75H10.75V11ZM10.75 10.25H11.5V11H10.75V10.25ZM10.75 9.5H11.5V10.25H10.75V9.5ZM10.75 8.75H11.5V9.5H10.75V8.75ZM10 10.25H10.75V11H10V10.25ZM10 11H10.75V11.75H10V11ZM10 11.75H10.75V12.5H10V11.75ZM10 12.5H10.75V13.25H10V12.5ZM10 9.5H10.75V10.25H10V9.5ZM8.5 8.75H9.25V9.5H8.5V8.75ZM9.25 8.75H10V9.5H9.25V8.75ZM10 8H10.75V8.75H10V8ZM10 8.75H10.75V9.5H10V8.75ZM9.25 8H10V8.75H9.25V8ZM13.7441 8H14.4941V8.75H13.7441V8ZM12.9941 8H13.7441V8.75H12.9941V8ZM12.9941 8.75H13.7441V9.5H12.9941V8.75ZM13.7441 8.75H14.4941V9.5H13.7441V8.75ZM14.4941 8H15.2441V8.75H14.4941V8ZM15.2441 8H15.9941V8.75H15.2441V8ZM15.9941 8H16.7441V8.75H15.9941V8ZM15.9941 8.75H16.7441V9.5H15.9941V8.75ZM15.2441 8.75H15.9941V9.5H15.2441V8.75ZM15.9941 10.25H16.7441V11H15.9941V10.25ZM16.7441 8.75H17.4941V9.5H16.7441V8.75ZM16.7441 9.5H17.4941V10.25H16.7441V9.5ZM16.7441 10.25H17.4941V11H16.7441V10.25ZM16.7441 11H17.4941V11.75H16.7441V11ZM16.7441 11.75H17.4941V12.5H16.7441V11.75ZM16.7441 12.5H17.4941V13.25H16.7441V12.5ZM15.9941 12.5H16.7441V13.25H15.9941V12.5ZM15.9941 11.75H16.7441V12.5H15.9941V11.75ZM15.9941 11H16.7441V11.75H15.9941V11ZM15.9941 9.5H16.7441V10.25H15.9941V9.5ZM15.2441 12.5H15.9941V13.25H15.2441V12.5ZM15.9941 13.25H16.7441V14H15.9941V13.25ZM15.2441 13.25H15.9941V14H15.2441V13.25ZM14.4941 13.25H15.2441V14H14.4941V13.25ZM13.7441 13.25H14.4941V14H13.7441V13.25ZM12.9941 13.25H13.7441V14H12.9941V13.25ZM12.9941 12.5H13.7441V13.25H12.9941V12.5ZM13.7441 12.5H14.4941V13.25H13.7441V12.5ZM12.9941 11.75H13.7441V12.5H12.9941V11.75ZM12.2441 12.5H12.9941V13.25H12.2441V12.5ZM12.2441 11.75H12.9941V12.5H12.2441V11.75ZM12.2441 11H12.9941V11.75H12.2441V11ZM12.2441 10.25H12.9941V11H12.2441V10.25ZM12.2441 9.5H12.9941V10.25H12.2441V9.5ZM12.2441 8.75H12.9941V9.5H12.2441V8.75ZM12.9941 9.5H13.7441V10.25H12.9941V9.5ZM12.9941 10.25H13.7441V11H12.9941V10.25ZM12.9941 11H13.7441V11.75H12.9941V11ZM14.4941 12.5H15.2441V13.25H14.4941V12.5ZM14.4941 8.75H15.2441V9.5H14.4941V8.75ZM18.2461 6.5H18.9961V7.25H18.2461V6.5ZM18.9961 6.5H19.7461V7.25H18.9961V6.5ZM18.9961 7.25H19.7461V8H18.9961V7.25ZM18.9961 8H19.7461V8.75H18.9961V8ZM18.9961 8.75H19.7461V9.5H18.9961V8.75ZM18.2461 8.75H18.9961V9.5H18.2461V8.75ZM18.2461 8H18.9961V8.75H18.2461V8ZM18.2461 7.25H18.9961V8H18.2461V7.25ZM18.2461 9.5H18.9961V10.25H18.2461V9.5ZM18.2461 10.25H18.9961V11H18.2461V10.25ZM18.2461 11H18.9961V11.75H18.2461V11ZM18.2461 11.75H18.9961V12.5H18.2461V11.75ZM18.2461 12.5H18.9961V13.25H18.2461V12.5ZM18.2461 13.25H18.9961V14H18.2461V13.25ZM18.9961 13.25H19.7461V14H18.9961V13.25ZM18.9961 12.5H19.7461V13.25H18.9961V12.5ZM18.9961 11.75H19.7461V12.5H18.9961V11.75ZM18.9961 11H19.7461V11.75H18.9961V11ZM18.9961 10.25H19.7461V11H18.9961V10.25ZM18.9961 9.5H19.7461V10.25H18.9961V9.5ZM19.7461 10.25H20.4961V11H19.7461V10.25ZM20.4961 10.25H21.2461V11H20.4961V10.25ZM20.4961 9.5H21.2461V10.25H20.4961V9.5ZM21.2461 9.5H21.9961V10.25H21.2461V9.5ZM21.2461 8.75H21.9961V9.5H21.2461V8.75ZM21.2461 8H21.9961V8.75H21.2461V8ZM21.9961 8H22.7461V8.75H21.9961V8ZM21.9961 8.75H22.7461V9.5H21.9961V8.75ZM20.4961 11H21.2461V11.75H20.4961V11ZM21.2461 11H21.9961V11.75H21.2461V11ZM21.9961 11.75H22.7461V12.5H21.9961V11.75ZM21.2461 11.75H21.9961V12.5H21.2461V11.75ZM21.2461 12.5H21.9961V13.25H21.2461V12.5ZM21.9961 12.5H22.7461V13.25H21.9961V12.5ZM21.9961 13.25H22.7461V14H21.9961V13.25ZM21.2461 13.25H21.9961V14H21.2461V13.25ZM23.4961 8.75H24.2461V9.5H23.4961V8.75ZM23.4961 8H24.2461V8.75H23.4961V8ZM24.2461 8H24.9961V8.75H24.2461V8ZM24.2461 8.75H24.9961V9.5H24.2461V8.75ZM24.2461 9.5H24.9961V10.25H24.2461V9.5ZM24.2461 10.25H24.9961V11H24.2461V10.25ZM24.2461 11H24.9961V11.75H24.2461V11ZM23.4961 11H24.2461V11.75H23.4961V11ZM23.4961 10.25H24.2461V11H23.4961V10.25ZM23.4961 9.5H24.2461V10.25H23.4961V9.5ZM23.4961 11.75H24.2461V12.5H23.4961V11.75ZM24.2461 11.75H24.9961V12.5H24.2461V11.75ZM24.2461 12.5H24.9961V13.25H24.2461V12.5ZM24.2461 13.25H24.9961V14H24.2461V13.25ZM23.4961 13.25H24.2461V14H23.4961V13.25ZM23.4961 12.5H24.2461V13.25H23.4961V12.5ZM27.2461 13.25H27.9961V14H27.2461V13.25ZM27.9961 13.25H28.7461V14H27.9961V13.25ZM27.9961 12.5H28.7461V13.25H27.9961V12.5ZM27.9961 11.75H28.7461V12.5H27.9961V11.75ZM27.9961 11H28.7461V11.75H27.9961V11ZM27.9961 10.25H28.7461V11H27.9961V10.25ZM27.9961 9.5H28.7461V10.25H27.9961V9.5ZM27.9961 8.75H28.7461V9.5H27.9961V8.75ZM27.2461 10.25H27.9961V11H27.2461V10.25ZM27.2461 11H27.9961V11.75H27.2461V11ZM27.2461 11.75H27.9961V12.5H27.2461V11.75ZM27.2461 12.5H27.9961V13.25H27.2461V12.5ZM27.2461 9.5H27.9961V10.25H27.2461V9.5ZM24.9961 8.75H25.7461V9.5H24.9961V8.75ZM25.7461 8.75H26.4961V9.5H25.7461V8.75ZM26.4961 8.75H27.2461V9.5H26.4961V8.75ZM26.4961 8H27.2461V8.75H26.4961V8ZM27.2461 8H27.9961V8.75H27.2461V8ZM27.2461 8.75H27.9961V9.5H27.2461V8.75ZM25.7461 8H26.4961V8.75H25.7461V8ZM30.998 8H31.748V8.75H30.998V8ZM30.248 8H30.998V8.75H30.248V8ZM30.248 8.75H30.998V9.5H30.248V8.75ZM30.998 8.75H31.748V9.5H30.998V8.75ZM31.748 8H32.498V8.75H31.748V8ZM32.498 8H33.248V8.75H32.498V8ZM33.248 8H33.998V8.75H33.248V8ZM33.248 8.75H33.998V9.5H33.248V8.75ZM32.498 8.75H33.248V9.5H32.498V8.75ZM33.998 8.75H34.748V9.5H33.998V8.75ZM33.998 9.5H34.748V10.25H33.998V9.5ZM33.998 12.5H34.748V13.25H33.998V12.5ZM33.248 12.5H33.998V13.25H33.248V12.5ZM33.248 9.5H33.998V10.25H33.248V9.5ZM32.498 12.5H33.248V13.25H32.498V12.5ZM33.248 13.25H33.998V14H33.248V13.25ZM32.498 13.25H33.248V14H32.498V13.25ZM31.748 13.25H32.498V14H31.748V13.25ZM30.998 13.25H31.748V14H30.998V13.25ZM30.248 13.25H30.998V14H30.248V13.25ZM30.248 12.5H30.998V13.25H30.248V12.5ZM30.998 12.5H31.748V13.25H30.998V12.5ZM30.248 11.75H30.998V12.5H30.248V11.75ZM29.498 12.5H30.248V13.25H29.498V12.5ZM29.498 11.75H30.248V12.5H29.498V11.75ZM29.498 11H30.248V11.75H29.498V11ZM29.498 10.25H30.248V11H29.498V10.25ZM29.498 9.5H30.248V10.25H29.498V9.5ZM29.498 8.75H30.248V9.5H29.498V8.75ZM30.248 9.5H30.998V10.25H30.248V9.5ZM30.248 10.25H30.998V11H30.248V10.25ZM30.248 11H30.998V11.75H30.248V11ZM31.748 12.5H32.498V13.25H31.748V12.5ZM31.748 8.75H32.498V9.5H31.748V8.75ZM33.248 10.25H33.998V11H33.248V10.25ZM33.998 10.25H34.748V11H33.998V10.25ZM30.998 11H31.748V11.75H30.998V11ZM31.748 11H32.498V11.75H31.748V11ZM32.498 11H33.248V11.75H32.498V11ZM33.248 11H33.998V11.75H33.248V11ZM33.998 11H34.748V11.75H33.998V11ZM32.498 10.25H33.248V11H32.498V10.25ZM31.748 10.25H32.498V11H31.748V10.25ZM30.998 10.25H31.748V11H30.998V10.25ZM35.5 8H36.25V8.75H35.5V8ZM36.25 8H37V8.75H36.25V8ZM36.25 8.75H37V9.5H36.25V8.75ZM36.25 9.5H37V10.25H36.25V9.5ZM36.25 10.25H37V11H36.25V10.25ZM35.5 9.5H36.25V10.25H35.5V9.5ZM35.5 8.75H36.25V9.5H35.5V8.75ZM35.5 10.25H36.25V11H35.5V10.25ZM35.5 11H36.25V11.75H35.5V11ZM36.25 11H37V11.75H36.25V11ZM36.25 11.75H37V12.5H36.25V11.75ZM37 11.75H37.75V12.5H37V11.75ZM37 12.5H37.75V13.25H37V12.5ZM37.75 12.5H38.5V13.25H37.75V12.5ZM38.5 12.5H39.25V13.25H38.5V12.5ZM38.5 11.75H39.25V12.5H38.5V11.75ZM38.5 11H39.25V11.75H38.5V11ZM39.25 11H40V11.75H39.25V11ZM39.25 11.75H40V12.5H39.25V11.75ZM39.25 10.25H40V11H39.25V10.25ZM38.5 10.25H39.25V11H38.5V10.25ZM38.5 8H39.25V8.75H38.5V8ZM39.25 8H40V8.75H39.25V8ZM39.25 8.75H40V9.5H39.25V8.75ZM39.25 9.5H40V10.25H39.25V9.5ZM38.5 8.75H39.25V9.5H38.5V8.75ZM38.5 9.5H39.25V10.25H38.5V9.5ZM37.75 13.25H38.5V14H37.75V13.25ZM37 13.25H37.75V14H37V13.25ZM37 14H37.75V14.75H37V14ZM36.25 14H37V14.75H36.25V14ZM36.25 13.25H37V14H36.25V13.25ZM36.25 14.75H37V15.5H36.25V14.75ZM35.5 14.75H36.25V15.5H35.5V14.75ZM35.5 14H36.25V14.75H35.5V14ZM37.75 11.75H38.5V12.5H37.75V11.75ZM37 11H37.75V11.75H37V11ZM43.7441 8.75H44.4941V9.5H43.7441V8.75ZM44.4941 9.5H45.2441V10.25H44.4941V9.5ZM43.7441 9.5H44.4941V10.25H43.7441V9.5ZM43.7441 10.25H44.4941V11H43.7441V10.25ZM44.4941 10.25H45.2441V11H44.4941V10.25ZM44.4941 11H45.2441V11.75H44.4941V11ZM45.2441 11H45.9941V11.75H45.2441V11ZM45.9941 11H46.7441V11.75H45.9941V11ZM46.7441 10.25H47.4941V11H46.7441V10.25ZM45.9941 10.25H46.7441V11H45.9941V10.25ZM45.2441 10.25H45.9941V11H45.2441V10.25ZM46.7441 11H47.4941V11.75H46.7441V11ZM47.4941 11H48.2441V11.75H47.4941V11ZM47.4941 11.75H48.2441V12.5H47.4941V11.75ZM46.7441 11.75H47.4941V12.5H46.7441V11.75ZM46.7441 12.5H47.4941V13.25H46.7441V12.5ZM47.4941 12.5H48.2441V13.25H47.4941V12.5ZM46.7441 13.25H47.4941V14H46.7441V13.25ZM45.9941 12.5H46.7441V13.25H45.9941V12.5ZM45.2441 12.5H45.9941V13.25H45.2441V12.5ZM44.4941 12.5H45.2441V13.25H44.4941V12.5ZM43.7441 12.5H44.4941V13.25H43.7441V12.5ZM44.4941 13.25H45.2441V14H44.4941V13.25ZM45.2441 13.25H45.9941V14H45.2441V13.25ZM45.9941 13.25H46.7441V14H45.9941V13.25ZM47.4941 8.75H48.2441V9.5H47.4941V8.75ZM46.7441 8.75H47.4941V9.5H46.7441V8.75ZM46.7441 8H47.4941V8.75H46.7441V8ZM45.9941 8H46.7441V8.75H45.9941V8ZM45.2441 8H45.9941V8.75H45.2441V8ZM44.4941 8H45.2441V8.75H44.4941V8ZM44.4941 8.75H45.2441V9.5H44.4941V8.75ZM45.2441 8.75H45.9941V9.5H45.2441V8.75ZM45.9941 8.75H46.7441V9.5H45.9941V8.75ZM48.9941 6.5H50.4941V8H48.9941V6.5ZM48.9941 8.75H50.4941V14H48.9941V8.75ZM54.25 12.5H55V13.25H54.25V12.5ZM54.25 13.25H55V14H54.25V13.25ZM53.5 13.25H54.25V14H53.5V13.25ZM53.5 12.5H54.25V13.25H53.5V12.5ZM52.75 13.25H53.5V14H52.75V13.25ZM52.75 12.5H53.5V13.25H52.75V12.5ZM52 12.5H52.75V13.25H52V12.5ZM52 11.75H52.75V12.5H52V11.75ZM52 11H52.75V11.75H52V11ZM52 10.25H52.75V11H52V10.25ZM52 9.5H52.75V10.25H52V9.5ZM52 8.75H52.75V9.5H52V8.75ZM52.75 11H53.5V11.75H52.75V11ZM52.75 11.75H53.5V12.5H52.75V11.75ZM52.75 10.25H53.5V11H52.75V10.25ZM52.75 9.5H53.5V10.25H52.75V9.5ZM52.75 6.5H53.5V7.25H52.75V6.5ZM52.75 7.25H53.5V8H52.75V7.25ZM52.75 8H53.5V8.75H52.75V8ZM52.75 8.75H53.5V9.5H52.75V8.75ZM52 8H52.75V8.75H52V8ZM51.25 8.75H52V9.5H51.25V8.75ZM53.5 8.75H54.25V9.5H53.5V8.75ZM54.25 8.75H55V9.5H54.25V8.75ZM52 7.25H52.75V8H52V7.25ZM51.25 9.5H52V10.25H51.25V9.5ZM53.5 9.5H54.25V10.25H53.5V9.5ZM54.25 9.5H55V10.25H54.25V9.5Z"
            fill="#757575"
          />
          <path
            d="M4 21.5H5.07143V22.5714H4V21.5ZM4 20.4286H5.07143V21.5H4V20.4286ZM5.07143 20.4286H6.14286V21.5H5.07143V20.4286ZM5.07143 21.5H6.14286V22.5714H5.07143V21.5ZM5.07143 22.5714H6.14286V23.6429H5.07143V22.5714ZM5.07143 23.6429H6.14286V24.7143H5.07143V23.6429ZM5.07143 24.7143H6.14286V25.7857H5.07143V24.7143ZM4 24.7143H5.07143V25.7857H4V24.7143ZM4 23.6429H5.07143V24.7143H4V23.6429ZM4 22.5714H5.07143V23.6429H4V22.5714ZM4 25.7857H5.07143V26.8571H4V25.7857ZM5.07143 25.7857H6.14286V26.8571H5.07143V25.7857ZM5.07143 26.8571H6.14286V27.9286H5.07143V26.8571ZM5.07143 27.9286H6.14286V29H5.07143V27.9286ZM4 27.9286H5.07143V29H4V27.9286ZM4 26.8571H5.07143V27.9286H4V26.8571ZM8.28571 27.9286H9.35714V29H8.28571V27.9286ZM9.35714 27.9286H10.4286V29H9.35714V27.9286ZM9.35714 26.8571H10.4286V27.9286H9.35714V26.8571ZM9.35714 25.7857H10.4286V26.8571H9.35714V25.7857ZM9.35714 24.7143H10.4286V25.7857H9.35714V24.7143ZM9.35714 23.6429H10.4286V24.7143H9.35714V23.6429ZM9.35714 22.5714H10.4286V23.6429H9.35714V22.5714ZM9.35714 21.5H10.4286V22.5714H9.35714V21.5ZM8.28571 23.6429H9.35714V24.7143H8.28571V23.6429ZM8.28571 24.7143H9.35714V25.7857H8.28571V24.7143ZM8.28571 25.7857H9.35714V26.8571H8.28571V25.7857ZM8.28571 26.8571H9.35714V27.9286H8.28571V26.8571ZM8.28571 22.5714H9.35714V23.6429H8.28571V22.5714ZM6.14286 21.5H7.21429V22.5714H6.14286V21.5ZM7.21429 21.5H8.28571V22.5714H7.21429V21.5ZM8.28571 20.4286H9.35714V21.5H8.28571V20.4286ZM8.28571 21.5H9.35714V22.5714H8.28571V21.5ZM7.21429 20.4286H8.28571V21.5H7.21429V20.4286ZM12.5714 27.9286H13.6429V29H12.5714V27.9286ZM13.6429 27.9286H14.7143V29H13.6429V27.9286ZM13.6429 26.8571H14.7143V27.9286H13.6429V26.8571ZM13.6429 25.7857H14.7143V26.8571H13.6429V25.7857ZM13.6429 24.7143H14.7143V25.7857H13.6429V24.7143ZM13.6429 23.6429H14.7143V24.7143H13.6429V23.6429ZM13.6429 22.5714H14.7143V23.6429H13.6429V22.5714ZM13.6429 21.5H14.7143V22.5714H13.6429V21.5ZM12.5714 23.6429H13.6429V24.7143H12.5714V23.6429ZM12.5714 24.7143H13.6429V25.7857H12.5714V24.7143ZM12.5714 25.7857H13.6429V26.8571H12.5714V25.7857ZM12.5714 26.8571H13.6429V27.9286H12.5714V26.8571ZM12.5714 22.5714H13.6429V23.6429H12.5714V22.5714ZM10.4286 21.5H11.5V22.5714H10.4286V21.5ZM11.5 21.5H12.5714V22.5714H11.5V21.5ZM12.5714 20.4286H13.6429V21.5H12.5714V20.4286ZM12.5714 21.5H13.6429V22.5714H12.5714V21.5ZM11.5 20.4286H12.5714V21.5H11.5V20.4286ZM17.9202 20.4286H18.9916V21.5H17.9202V20.4286ZM16.8488 20.4286H17.9202V21.5H16.8488V20.4286ZM16.8488 21.5H17.9202V22.5714H16.8488V21.5ZM17.9202 21.5H18.9916V22.5714H17.9202V21.5ZM18.9916 20.4286H20.0631V21.5H18.9916V20.4286ZM20.0631 20.4286H21.1345V21.5H20.0631V20.4286ZM21.1345 20.4286H22.2059V21.5H21.1345V20.4286ZM21.1345 21.5H22.2059V22.5714H21.1345V21.5ZM20.0631 21.5H21.1345V22.5714H20.0631V21.5ZM21.1345 23.6429H22.2059V24.7143H21.1345V23.6429ZM22.2059 21.5H23.2773V22.5714H22.2059V21.5ZM22.2059 22.5714H23.2773V23.6429H22.2059V22.5714ZM22.2059 23.6429H23.2773V24.7143H22.2059V23.6429ZM22.2059 24.7143H23.2773V25.7857H22.2059V24.7143ZM22.2059 25.7857H23.2773V26.8571H22.2059V25.7857ZM22.2059 26.8571H23.2773V27.9286H22.2059V26.8571ZM21.1345 26.8571H22.2059V27.9286H21.1345V26.8571ZM21.1345 25.7857H22.2059V26.8571H21.1345V25.7857ZM21.1345 24.7143H22.2059V25.7857H21.1345V24.7143ZM21.1345 22.5714H22.2059V23.6429H21.1345V22.5714ZM20.0631 26.8571H21.1345V27.9286H20.0631V26.8571ZM21.1345 27.9286H22.2059V29H21.1345V27.9286ZM20.0631 27.9286H21.1345V29H20.0631V27.9286ZM18.9916 27.9286H20.0631V29H18.9916V27.9286ZM17.9202 27.9286H18.9916V29H17.9202V27.9286ZM16.8488 27.9286H17.9202V29H16.8488V27.9286ZM16.8488 26.8571H17.9202V27.9286H16.8488V26.8571ZM17.9202 26.8571H18.9916V27.9286H17.9202V26.8571ZM16.8488 25.7857H17.9202V26.8571H16.8488V25.7857ZM15.7773 26.8571H16.8488V27.9286H15.7773V26.8571ZM15.7773 25.7857H16.8488V26.8571H15.7773V25.7857ZM15.7773 24.7143H16.8488V25.7857H15.7773V24.7143ZM15.7773 23.6429H16.8488V24.7143H15.7773V23.6429ZM15.7773 22.5714H16.8488V23.6429H15.7773V22.5714ZM15.7773 21.5H16.8488V22.5714H15.7773V21.5ZM16.8488 22.5714H17.9202V23.6429H16.8488V22.5714ZM16.8488 23.6429H17.9202V24.7143H16.8488V23.6429ZM16.8488 24.7143H17.9202V25.7857H16.8488V24.7143ZM18.9916 26.8571H20.0631V27.9286H18.9916V26.8571ZM18.9916 21.5H20.0631V22.5714H18.9916V21.5ZM24.3516 21.5H25.423V22.5714H24.3516V21.5ZM24.3516 20.4286H25.423V21.5H24.3516V20.4286ZM25.423 20.4286H26.4944V21.5H25.423V20.4286ZM25.423 21.5H26.4944V22.5714H25.423V21.5ZM25.423 22.5714H26.4944V23.6429H25.423V22.5714ZM25.423 23.6429H26.4944V24.7143H25.423V23.6429ZM25.423 24.7143H26.4944V25.7857H25.423V24.7143ZM24.3516 24.7143H25.423V25.7857H24.3516V24.7143ZM24.3516 23.6429H25.423V24.7143H24.3516V23.6429ZM24.3516 22.5714H25.423V23.6429H24.3516V22.5714ZM24.3516 25.7857H25.423V26.8571H24.3516V25.7857ZM25.423 25.7857H26.4944V26.8571H25.423V25.7857ZM25.423 26.8571H26.4944V27.9286H25.423V26.8571ZM25.423 27.9286H26.4944V29H25.423V27.9286ZM24.3516 27.9286H25.423V29H24.3516V27.9286ZM24.3516 26.8571H25.423V27.9286H24.3516V26.8571ZM29.7087 27.9286H30.7801V29H29.7087V27.9286ZM30.7801 27.9286H31.8516V29H30.7801V27.9286ZM30.7801 26.8571H31.8516V27.9286H30.7801V26.8571ZM30.7801 25.7857H31.8516V26.8571H30.7801V25.7857ZM30.7801 24.7143H31.8516V25.7857H30.7801V24.7143ZM30.7801 23.6429H31.8516V24.7143H30.7801V23.6429ZM30.7801 22.5714H31.8516V23.6429H30.7801V22.5714ZM30.7801 21.5H31.8516V22.5714H30.7801V21.5ZM29.7087 23.6429H30.7801V24.7143H29.7087V23.6429ZM29.7087 24.7143H30.7801V25.7857H29.7087V24.7143ZM29.7087 25.7857H30.7801V26.8571H29.7087V25.7857ZM29.7087 26.8571H30.7801V27.9286H29.7087V26.8571ZM29.7087 22.5714H30.7801V23.6429H29.7087V22.5714ZM26.4944 21.5H27.5658V22.5714H26.4944V21.5ZM27.5658 21.5H28.6373V22.5714H27.5658V21.5ZM28.6373 21.5H29.7087V22.5714H28.6373V21.5ZM28.6373 20.4286H29.7087V21.5H28.6373V20.4286ZM29.7087 20.4286H30.7801V21.5H29.7087V20.4286ZM29.7087 21.5H30.7801V22.5714H29.7087V21.5ZM27.5658 20.4286H28.6373V21.5H27.5658V20.4286ZM32.9258 18.2857H33.9972V19.3571H32.9258V18.2857ZM33.9972 18.2857H35.0686V19.3571H33.9972V18.2857ZM33.9972 19.3571H35.0686V20.4286H33.9972V19.3571ZM33.9972 20.4286H35.0686V21.5H33.9972V20.4286ZM33.9972 21.5H35.0686V22.5714H33.9972V21.5ZM32.9258 21.5H33.9972V22.5714H32.9258V21.5ZM32.9258 20.4286H33.9972V21.5H32.9258V20.4286ZM32.9258 19.3571H33.9972V20.4286H32.9258V19.3571ZM32.9258 22.5714H33.9972V23.6429H32.9258V22.5714ZM32.9258 23.6429H33.9972V24.7143H32.9258V23.6429ZM32.9258 24.7143H33.9972V25.7857H32.9258V24.7143ZM32.9258 25.7857H33.9972V26.8571H32.9258V25.7857ZM32.9258 26.8571H33.9972V27.9286H32.9258V26.8571ZM32.9258 27.9286H33.9972V29H32.9258V27.9286ZM33.9972 27.9286H35.0686V29H33.9972V27.9286ZM33.9972 26.8571H35.0686V27.9286H33.9972V26.8571ZM33.9972 25.7857H35.0686V26.8571H33.9972V25.7857ZM33.9972 24.7143H35.0686V25.7857H33.9972V24.7143ZM33.9972 23.6429H35.0686V24.7143H33.9972V23.6429ZM33.9972 22.5714H35.0686V23.6429H33.9972V22.5714ZM35.0686 23.6429H36.1401V24.7143H35.0686V23.6429ZM36.1401 23.6429H37.2115V24.7143H36.1401V23.6429ZM36.1401 22.5714H37.2115V23.6429H36.1401V22.5714ZM37.2115 22.5714H38.2829V23.6429H37.2115V22.5714ZM37.2115 21.5H38.2829V22.5714H37.2115V21.5ZM37.2115 20.4286H38.2829V21.5H37.2115V20.4286ZM38.2829 20.4286H39.3544V21.5H38.2829V20.4286ZM38.2829 21.5H39.3544V22.5714H38.2829V21.5ZM36.1401 24.7143H37.2115V25.7857H36.1401V24.7143ZM37.2115 24.7143H38.2829V25.7857H37.2115V24.7143ZM38.2829 25.7857H39.3544V26.8571H38.2829V25.7857ZM37.2115 25.7857H38.2829V26.8571H37.2115V25.7857ZM37.2115 26.8571H38.2829V27.9286H37.2115V26.8571ZM38.2829 26.8571H39.3544V27.9286H38.2829V26.8571ZM38.2829 27.9286H39.3544V29H38.2829V27.9286ZM37.2115 27.9286H38.2829V29H37.2115V27.9286ZM42.5686 20.4286H43.6401V21.5H42.5686V20.4286ZM41.4972 20.4286H42.5686V21.5H41.4972V20.4286ZM41.4972 21.5H42.5686V22.5714H41.4972V21.5ZM42.5686 21.5H43.6401V22.5714H42.5686V21.5ZM43.6401 20.4286H44.7115V21.5H43.6401V20.4286ZM44.7115 20.4286H45.7829V21.5H44.7115V20.4286ZM45.7829 20.4286H46.8544V21.5H45.7829V20.4286ZM45.7829 21.5H46.8544V22.5714H45.7829V21.5ZM44.7115 21.5H45.7829V22.5714H44.7115V21.5ZM46.8544 21.5H47.9258V22.5714H46.8544V21.5ZM46.8544 22.5714H47.9258V23.6429H46.8544V22.5714ZM46.8544 26.8571H47.9258V27.9286H46.8544V26.8571ZM45.7829 26.8571H46.8544V27.9286H45.7829V26.8571ZM45.7829 22.5714H46.8544V23.6429H45.7829V22.5714ZM44.7115 26.8571H45.7829V27.9286H44.7115V26.8571ZM45.7829 27.9286H46.8544V29H45.7829V27.9286ZM44.7115 27.9286H45.7829V29H44.7115V27.9286ZM43.6401 27.9286H44.7115V29H43.6401V27.9286ZM42.5686 27.9286H43.6401V29H42.5686V27.9286ZM41.4972 27.9286H42.5686V29H41.4972V27.9286ZM41.4972 26.8571H42.5686V27.9286H41.4972V26.8571ZM42.5686 26.8571H43.6401V27.9286H42.5686V26.8571ZM41.4972 25.7857H42.5686V26.8571H41.4972V25.7857ZM40.4258 26.8571H41.4972V27.9286H40.4258V26.8571ZM40.4258 25.7857H41.4972V26.8571H40.4258V25.7857ZM40.4258 24.7143H41.4972V25.7857H40.4258V24.7143ZM40.4258 23.6429H41.4972V24.7143H40.4258V23.6429ZM40.4258 22.5714H41.4972V23.6429H40.4258V22.5714ZM40.4258 21.5H41.4972V22.5714H40.4258V21.5ZM41.4972 22.5714H42.5686V23.6429H41.4972V22.5714ZM41.4972 23.6429H42.5686V24.7143H41.4972V23.6429ZM41.4972 24.7143H42.5686V25.7857H41.4972V24.7143ZM43.6401 26.8571H44.7115V27.9286H43.6401V26.8571ZM43.6401 21.5H44.7115V22.5714H43.6401V21.5ZM45.7829 23.6429H46.8544V24.7143H45.7829V23.6429ZM46.8544 23.6429H47.9258V24.7143H46.8544V23.6429ZM42.5686 24.7143H43.6401V25.7857H42.5686V24.7143ZM43.6401 24.7143H44.7115V25.7857H43.6401V24.7143ZM44.7115 24.7143H45.7829V25.7857H44.7115V24.7143ZM45.7829 24.7143H46.8544V25.7857H45.7829V24.7143ZM46.8544 24.7143H47.9258V25.7857H46.8544V24.7143ZM44.7115 23.6429H45.7829V24.7143H44.7115V23.6429ZM43.6401 23.6429H44.7115V24.7143H43.6401V23.6429ZM42.5686 23.6429H43.6401V24.7143H42.5686V23.6429ZM49 20.4286H50.0714V21.5H49V20.4286ZM50.0714 20.4286H51.1429V21.5H50.0714V20.4286ZM50.0714 21.5H51.1429V22.5714H50.0714V21.5ZM50.0714 22.5714H51.1429V23.6429H50.0714V22.5714ZM50.0714 23.6429H51.1429V24.7143H50.0714V23.6429ZM49 22.5714H50.0714V23.6429H49V22.5714ZM49 21.5H50.0714V22.5714H49V21.5ZM49 23.6429H50.0714V24.7143H49V23.6429ZM49 24.7143H50.0714V25.7857H49V24.7143ZM50.0714 24.7143H51.1429V25.7857H50.0714V24.7143ZM50.0714 25.7857H51.1429V26.8571H50.0714V25.7857ZM51.1429 25.7857H52.2143V26.8571H51.1429V25.7857ZM51.1429 26.8571H52.2143V27.9286H51.1429V26.8571ZM52.2143 26.8571H53.2857V27.9286H52.2143V26.8571ZM53.2857 26.8571H54.3571V27.9286H53.2857V26.8571ZM53.2857 25.7857H54.3571V26.8571H53.2857V25.7857ZM53.2857 24.7143H54.3571V25.7857H53.2857V24.7143ZM54.3571 24.7143H55.4286V25.7857H54.3571V24.7143ZM54.3571 25.7857H55.4286V26.8571H54.3571V25.7857ZM54.3571 23.6429H55.4286V24.7143H54.3571V23.6429ZM53.2857 23.6429H54.3571V24.7143H53.2857V23.6429ZM53.2857 20.4286H54.3571V21.5H53.2857V20.4286ZM54.3571 20.4286H55.4286V21.5H54.3571V20.4286ZM54.3571 21.5H55.4286V22.5714H54.3571V21.5ZM54.3571 22.5714H55.4286V23.6429H54.3571V22.5714ZM53.2857 21.5H54.3571V22.5714H53.2857V21.5ZM53.2857 22.5714H54.3571V23.6429H53.2857V22.5714ZM52.2143 27.9286H53.2857V29H52.2143V27.9286ZM51.1429 27.9286H52.2143V29H51.1429V27.9286ZM51.1429 29H52.2143V30.0714H51.1429V29ZM50.0714 29H51.1429V30.0714H50.0714V29ZM50.0714 27.9286H51.1429V29H50.0714V27.9286ZM50.0714 30.0714H51.1429V31.1429H50.0714V30.0714ZM49 30.0714H50.0714V31.1429H49V30.0714ZM49 29H50.0714V30.0714H49V29ZM52.2143 25.7857H53.2857V26.8571H52.2143V25.7857ZM51.1429 24.7143H52.2143V25.7857H51.1429V24.7143ZM60.7857 18.2857H61.8571V19.3571H60.7857V18.2857ZM60.7857 19.3571H61.8571V20.4286H60.7857V19.3571ZM59.7143 19.3571H60.7857V20.4286H59.7143V19.3571ZM59.7143 18.2857H60.7857V19.3571H59.7143V18.2857ZM58.6429 18.2857H59.7143V19.3571H58.6429V18.2857ZM58.6429 19.3571H59.7143V20.4286H58.6429V19.3571ZM58.6429 20.4286H59.7143V21.5H58.6429V20.4286ZM57.5714 19.3571H58.6429V20.4286H57.5714V19.3571ZM57.5714 20.4286H58.6429V21.5H57.5714V20.4286ZM57.5714 21.5H58.6429V22.5714H57.5714V21.5ZM57.5714 22.5714H58.6429V23.6429H57.5714V22.5714ZM58.6429 22.5714H59.7143V23.6429H58.6429V22.5714ZM58.6429 21.5H59.7143V22.5714H58.6429V21.5ZM57.5714 27.9286H58.6429V29H57.5714V27.9286ZM57.5714 26.8571H58.6429V27.9286H57.5714V26.8571ZM57.5714 25.7857H58.6429V26.8571H57.5714V25.7857ZM57.5714 24.7143H58.6429V25.7857H57.5714V24.7143ZM57.5714 23.6429H58.6429V24.7143H57.5714V23.6429ZM58.6429 23.6429H59.7143V24.7143H58.6429V23.6429ZM58.6429 24.7143H59.7143V25.7857H58.6429V24.7143ZM58.6429 25.7857H59.7143V26.8571H58.6429V25.7857ZM58.6429 26.8571H59.7143V27.9286H58.6429V26.8571ZM58.6429 27.9286H59.7143V29H58.6429V27.9286ZM56.5 21.5H57.5714V22.5714H56.5V21.5ZM59.7143 21.5H60.7857V22.5714H59.7143V21.5ZM60.7857 21.5H61.8571V22.5714H60.7857V21.5ZM56.5 22.5714H57.5714V23.6429H56.5V22.5714ZM59.7143 22.5714H60.7857V23.6429H59.7143V22.5714ZM60.7857 22.5714H61.8571V23.6429H60.7857V22.5714ZM65.0686 20.4286H66.1401V21.5H65.0686V20.4286ZM63.9972 20.4286H65.0686V21.5H63.9972V20.4286ZM63.9972 21.5H65.0686V22.5714H63.9972V21.5ZM65.0686 21.5H66.1401V22.5714H65.0686V21.5ZM66.1401 20.4286H67.2115V21.5H66.1401V20.4286ZM67.2115 20.4286H68.2829V21.5H67.2115V20.4286ZM68.2829 20.4286H69.3544V21.5H68.2829V20.4286ZM68.2829 21.5H69.3544V22.5714H68.2829V21.5ZM67.2115 21.5H68.2829V22.5714H67.2115V21.5ZM68.2829 23.6429H69.3544V24.7143H68.2829V23.6429ZM69.3544 21.5H70.4258V22.5714H69.3544V21.5ZM69.3544 22.5714H70.4258V23.6429H69.3544V22.5714ZM69.3544 23.6429H70.4258V24.7143H69.3544V23.6429ZM69.3544 24.7143H70.4258V25.7857H69.3544V24.7143ZM69.3544 25.7857H70.4258V26.8571H69.3544V25.7857ZM69.3544 26.8571H70.4258V27.9286H69.3544V26.8571ZM68.2829 26.8571H69.3544V27.9286H68.2829V26.8571ZM68.2829 25.7857H69.3544V26.8571H68.2829V25.7857ZM68.2829 24.7143H69.3544V25.7857H68.2829V24.7143ZM68.2829 22.5714H69.3544V23.6429H68.2829V22.5714ZM67.2115 26.8571H68.2829V27.9286H67.2115V26.8571ZM68.2829 27.9286H69.3544V29H68.2829V27.9286ZM67.2115 27.9286H68.2829V29H67.2115V27.9286ZM66.1401 27.9286H67.2115V29H66.1401V27.9286ZM65.0686 27.9286H66.1401V29H65.0686V27.9286ZM63.9972 27.9286H65.0686V29H63.9972V27.9286ZM63.9972 26.8571H65.0686V27.9286H63.9972V26.8571ZM65.0686 26.8571H66.1401V27.9286H65.0686V26.8571ZM63.9972 25.7857H65.0686V26.8571H63.9972V25.7857ZM62.9258 26.8571H63.9972V27.9286H62.9258V26.8571ZM62.9258 25.7857H63.9972V26.8571H62.9258V25.7857ZM62.9258 24.7143H63.9972V25.7857H62.9258V24.7143ZM62.9258 23.6429H63.9972V24.7143H62.9258V23.6429ZM62.9258 22.5714H63.9972V23.6429H62.9258V22.5714ZM62.9258 21.5H63.9972V22.5714H62.9258V21.5ZM63.9972 22.5714H65.0686V23.6429H63.9972V22.5714ZM63.9972 23.6429H65.0686V24.7143H63.9972V23.6429ZM63.9972 24.7143H65.0686V25.7857H63.9972V24.7143ZM66.1401 26.8571H67.2115V27.9286H66.1401V26.8571ZM66.1401 21.5H67.2115V22.5714H66.1401V21.5ZM73.6429 20.4286H74.7143V21.5H73.6429V20.4286ZM72.5714 20.4286H73.6429V21.5H72.5714V20.4286ZM72.5714 21.5H73.6429V22.5714H72.5714V21.5ZM73.6429 21.5H74.7143V22.5714H73.6429V21.5ZM74.7143 20.4286H75.7857V21.5H74.7143V20.4286ZM75.7857 20.4286H76.8571V21.5H75.7857V20.4286ZM76.8571 20.4286H77.9286V21.5H76.8571V20.4286ZM76.8571 21.5H77.9286V22.5714H76.8571V21.5ZM75.7857 21.5H76.8571V22.5714H75.7857V21.5ZM77.9286 21.5H79V22.5714H77.9286V21.5ZM77.9286 22.5714H79V23.6429H77.9286V22.5714ZM77.9286 25.7857H79V26.8571H77.9286V25.7857ZM77.9286 26.8571H79V27.9286H77.9286V26.8571ZM76.8571 26.8571H77.9286V27.9286H76.8571V26.8571ZM76.8571 25.7857H77.9286V26.8571H76.8571V25.7857ZM76.8571 22.5714H77.9286V23.6429H76.8571V22.5714ZM75.7857 26.8571H76.8571V27.9286H75.7857V26.8571ZM76.8571 27.9286H77.9286V29H76.8571V27.9286ZM75.7857 27.9286H76.8571V29H75.7857V27.9286ZM74.7143 27.9286H75.7857V29H74.7143V27.9286ZM73.6429 27.9286H74.7143V29H73.6429V27.9286ZM72.5714 27.9286H73.6429V29H72.5714V27.9286ZM72.5714 26.8571H73.6429V27.9286H72.5714V26.8571ZM73.6429 26.8571H74.7143V27.9286H73.6429V26.8571ZM72.5714 25.7857H73.6429V26.8571H72.5714V25.7857ZM71.5 26.8571H72.5714V27.9286H71.5V26.8571ZM71.5 25.7857H72.5714V26.8571H71.5V25.7857ZM71.5 24.7143H72.5714V25.7857H71.5V24.7143ZM71.5 23.6429H72.5714V24.7143H71.5V23.6429ZM71.5 22.5714H72.5714V23.6429H71.5V22.5714ZM71.5 21.5H72.5714V22.5714H71.5V21.5ZM72.5714 22.5714H73.6429V23.6429H72.5714V22.5714ZM72.5714 23.6429H73.6429V24.7143H72.5714V23.6429ZM72.5714 24.7143H73.6429V25.7857H72.5714V24.7143ZM74.7143 26.8571H75.7857V27.9286H74.7143V26.8571ZM74.7143 21.5H75.7857V22.5714H74.7143V21.5ZM87.5742 27.9286H86.5028V26.8571H87.5742V27.9286ZM87.5742 29H86.5028V27.9286H87.5742V29ZM86.5028 29H85.4314V27.9286H86.5028V29ZM86.5028 27.9286H85.4314V26.8571H86.5028V27.9286ZM86.5028 26.8571H85.4314V25.7857H86.5028V26.8571ZM86.5028 25.7857H85.4314V24.7143H86.5028V25.7857ZM86.5028 24.7143H85.4314V23.6429H86.5028V24.7143ZM87.5742 24.7143H86.5028V23.6429H87.5742V24.7143ZM87.5742 25.7857H86.5028V24.7143H87.5742V25.7857ZM87.5742 26.8571H86.5028V25.7857H87.5742V26.8571ZM87.5742 23.6429H86.5028V22.5714H87.5742V23.6429ZM86.5028 23.6429H85.4314V22.5714H86.5028V23.6429ZM86.5028 22.5714H85.4314V21.5H86.5028V22.5714ZM86.5028 21.5H85.4314V20.4286H86.5028V21.5ZM87.5742 21.5H86.5028V20.4286H87.5742V21.5ZM87.5742 22.5714H86.5028V21.5H87.5742V22.5714ZM82.2171 21.5H81.1456V20.4286H82.2171V21.5ZM81.1456 21.5H80.0742V20.4286H81.1456V21.5ZM81.1456 22.5714H80.0742V21.5H81.1456V22.5714ZM81.1456 23.6429H80.0742V22.5714H81.1456V23.6429ZM81.1456 24.7143H80.0742V23.6429H81.1456V24.7143ZM81.1456 25.7857H80.0742V24.7143H81.1456V25.7857ZM81.1456 26.8571H80.0742V25.7857H81.1456V26.8571ZM81.1456 27.9286H80.0742V26.8571H81.1456V27.9286ZM82.2171 25.7857H81.1456V24.7143H82.2171V25.7857ZM82.2171 24.7143H81.1456V23.6429H82.2171V24.7143ZM82.2171 23.6429H81.1456V22.5714H82.2171V23.6429ZM82.2171 22.5714H81.1456V21.5H82.2171V22.5714ZM82.2171 26.8571H81.1456V25.7857H82.2171V26.8571ZM85.4314 27.9286H84.3599V26.8571H85.4314V27.9286ZM84.3599 27.9286H83.2885V26.8571H84.3599V27.9286ZM83.2885 27.9286H82.2171V26.8571H83.2885V27.9286ZM83.2885 29H82.2171V27.9286H83.2885V29ZM82.2171 29H81.1456V27.9286H82.2171V29ZM82.2171 27.9286H81.1456V26.8571H82.2171V27.9286ZM84.3599 29H83.2885V27.9286H84.3599V29ZM88.6484 21.5H89.7199V22.5714H88.6484V21.5ZM89.7199 22.5714H90.7913V23.6429H89.7199V22.5714ZM88.6484 22.5714H89.7199V23.6429H88.6484V22.5714ZM88.6484 23.6429H89.7199V24.7143H88.6484V23.6429ZM89.7199 23.6429H90.7913V24.7143H89.7199V23.6429ZM89.7199 24.7143H90.7913V25.7857H89.7199V24.7143ZM90.7913 24.7143H91.8627V25.7857H90.7913V24.7143ZM91.8627 24.7143H92.9342V25.7857H91.8627V24.7143ZM92.9342 23.6429H94.0056V24.7143H92.9342V23.6429ZM91.8627 23.6429H92.9342V24.7143H91.8627V23.6429ZM90.7913 23.6429H91.8627V24.7143H90.7913V23.6429ZM92.9342 24.7143H94.0056V25.7857H92.9342V24.7143ZM94.0056 24.7143H95.077V25.7857H94.0056V24.7143ZM94.0056 25.7857H95.077V26.8571H94.0056V25.7857ZM92.9342 25.7857H94.0056V26.8571H92.9342V25.7857ZM92.9342 26.8571H94.0056V27.9286H92.9342V26.8571ZM94.0056 26.8571H95.077V27.9286H94.0056V26.8571ZM92.9342 27.9286H94.0056V29H92.9342V27.9286ZM91.8627 26.8571H92.9342V27.9286H91.8627V26.8571ZM90.7913 26.8571H91.8627V27.9286H90.7913V26.8571ZM89.7199 26.8571H90.7913V27.9286H89.7199V26.8571ZM88.6484 26.8571H89.7199V27.9286H88.6484V26.8571ZM89.7199 27.9286H90.7913V29H89.7199V27.9286ZM90.7913 27.9286H91.8627V29H90.7913V27.9286ZM91.8627 27.9286H92.9342V29H91.8627V27.9286ZM94.0056 21.5H95.077V22.5714H94.0056V21.5ZM92.9342 21.5H94.0056V22.5714H92.9342V21.5ZM92.9342 20.4286H94.0056V21.5H92.9342V20.4286ZM91.8627 20.4286H92.9342V21.5H91.8627V20.4286ZM90.7913 20.4286H91.8627V21.5H90.7913V20.4286ZM89.7199 20.4286H90.7913V21.5H89.7199V20.4286ZM89.7199 21.5H90.7913V22.5714H89.7199V21.5ZM90.7913 21.5H91.8627V22.5714H90.7913V21.5ZM91.8627 21.5H92.9342V22.5714H91.8627V21.5Z"
            fill="#1E1E1E"
          />
        </svg>
      </div>

      {/* Main Content */}
      <div className="flex-1 flex items-center justify-center p-4">
        <div className="flex flex-col items-center gap-6 w-full max-w-md">
          {/* Current Mode Label - Above Timer */}
          <div className="h-8 flex items-center justify-center">
            <AnimatePresence mode="wait">
              <motion.div
                key={timer.mode}
                initial={{ opacity: 0, y: -10 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: 10 }}
                transition={{ duration: 0.3, ease: "easeInOut" }}
                className="text-charcoal font-brand text-lg font-medium"
              >
                {MODE_LABELS[timer.mode]}
              </motion.div>
            </AnimatePresence>
          </div>

          {/* Timer Display */}
          <div className="relative w-full max-w-sm aspect-[2/1] flex items-center justify-center">
            <div className="w-full h-full bg-charcoal rounded-lg flex items-center justify-center">
              <div className="text-cream font-timer text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-normal tracking-wider flex items-center">
                {/* Minutes */}
                <div className="flex">
                  {minutes.split("").map((digit, index) => {
                    const direction = getDigitDirection(
                      minutes,
                      prevMinutes,
                      index,
                    );
                    return (
                      <AnimatedDigit
                        key={`min-${index}`}
                        digit={digit}
                        direction={direction}
                        index={index}
                      />
                    );
                  })}
                </div>

                {/* Colon with blinking animation */}
                <motion.span
                  animate={{ opacity: timer.isRunning ? [1, 0, 1] : 1 }}
                  transition={{
                    duration: 1,
                    repeat: timer.isRunning ? Infinity : 0,
                  }}
                  className="mx-1"
                >
                  :
                </motion.span>

                {/* Seconds */}
                <div className="flex">
                  {seconds.split("").map((digit, index) => {
                    const direction = getDigitDirection(
                      seconds,
                      prevSeconds,
                      index,
                    );
                    return (
                      <AnimatedDigit
                        key={`sec-${index}`}
                        digit={digit}
                        direction={direction}
                        index={index}
                      />
                    );
                  })}
                </div>
              </div>
            </div>
          </div>

          {/* Control Bar */}
          <div className="flex items-center justify-between w-full max-w-sm gap-4">
            {/* Play/Pause Button */}
            <motion.button
              onClick={toggleTimer}
              onMouseDown={playClockClickSound}
              onMouseUp={playClockClickUpSound}
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              className="w-14 h-14 bg-charcoal rounded-lg flex items-center justify-center hover:bg-charcoal-700 transition-colors"
            >
              <svg
                className="w-8 h-8 text-cream"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  ref={pathRef}
                  d={PLAY_PATH}
                  fill="currentColor"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
              </svg>
            </motion.button>

            {/* Mode Selection Buttons */}
            <div className="relative flex items-center bg-black/70 rounded-lg p-1 gap-0">
              {/* Active Mode Overlay */}
              <motion.div
                className="absolute top-1 bottom-1 w-12 bg-cream/20 rounded"
                initial={false}
                animate={{
                  x:
                    timer.mode === "focus"
                      ? 0
                      : timer.mode === "shortBreak"
                        ? 48
                        : 96,
                }}
                transition={{ duration: 0.3, ease: "easeInOut" }}
              />

              {/* Focus Mode Button */}
              <motion.button
                onClick={() => switchMode("focus")}
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className={`relative z-10 w-12 h-12 rounded flex items-center justify-center hover:bg-black/20 transition-colors ${
                  timer.mode === "focus" ? "text-cream" : "text-cream/40"
                }`}
                title="Focus (25 min)"
              >
                {getModeIcon("focus")}
              </motion.button>

              {/* Short Break Button */}
              <motion.button
                onClick={() => switchMode("shortBreak")}
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className={`relative z-10 w-12 h-12 rounded flex items-center justify-center hover:bg-black/20 transition-colors ${
                  timer.mode === "shortBreak" ? "text-cream" : "text-cream/40"
                }`}
                title="Short Break (5 min)"
              >
                {getModeIcon("shortBreak")}
              </motion.button>

              {/* Long Break Button */}
              <motion.button
                onClick={() => switchMode("longBreak")}
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className={`relative z-10 w-12 h-12 rounded flex items-center justify-center hover:bg-black/20 transition-colors ${
                  timer.mode === "longBreak" ? "text-cream" : "text-cream/40"
                }`}
                title="Long Break (15 min)"
              >
                {getModeIcon("longBreak")}
              </motion.button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
